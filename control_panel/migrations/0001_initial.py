# Generated by Django 2.0.2 on 2018-04-03 09:23

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('student_login', models.CharField(default=None, max_length=200, unique=True, verbose_name='Логін студента')),
                ('student_active', models.BooleanField(default=True)),
                ('student_full_name', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='ПІБ')),
                ('student_university_group', models.CharField(blank=True, default=None, max_length=10, null=True, verbose_name='Группа')),
                ('student_faculty', models.CharField(blank=True, default=None, max_length=15, null=True, verbose_name='Факультет або ВНЗ')),
                ('student_grade', models.IntegerField(blank=True, default=None, null=True, verbose_name='Курс')),
                ('student_state', models.CharField(blank=True, default=None, max_length=100, null=True, verbose_name='Статус')),
                ('student_notes', models.TextField(blank=True, default=None, null=True, verbose_name='Примітки')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Студенти',
                'verbose_name': 'Студент',
                'db_table': 'Students',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(default=None, max_length=100, verbose_name='Назва')),
            ],
            options={
                'verbose_name_plural': 'Кафедри',
                'verbose_name': 'Кафедра',
                'db_table': 'Departments',
            },
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discipline_name', models.CharField(max_length=100, verbose_name='Назва')),
                ('discipline_department_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='control_panel.Department', verbose_name='Кафедра')),
            ],
            options={
                'verbose_name_plural': 'Предмети',
                'verbose_name': 'Предмет',
                'db_table': 'Disciplines',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_full_name', models.CharField(default=None, max_length=200, verbose_name='ПІБ')),
                ('teacher_check_tests', models.BooleanField(default=False, verbose_name='Приймає контрольні')),
                ('teacher_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='control_panel.Department', verbose_name='Кафедра')),
            ],
            options={
                'verbose_name_plural': 'Викладачі',
                'verbose_name': 'Викладач',
                'db_table': 'Teachers',
            },
        ),
        migrations.CreateModel(
            name='TeacherRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_rank', models.CharField(max_length=100, verbose_name='Звання')),
            ],
            options={
                'verbose_name_plural': 'Звання викладачів',
                'verbose_name': 'Звання викладача',
                'db_table': "Teacher's ranks",
            },
        ),
        migrations.CreateModel(
            name='Troop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('troop_id', models.IntegerField(default=None, verbose_name='Номер взводу')),
                ('troop_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='control_panel.Department', verbose_name='Кафедра')),
                ('troop_head', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='control_panel.Teacher', verbose_name='Куратор')),
                ('troop_head_rank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='control_panel.TeacherRank', verbose_name='Звання Куратора')),
            ],
            options={
                'verbose_name_plural': 'Взводи',
                'verbose_name': 'Взвод',
                'db_table': 'Troops',
            },
        ),
        migrations.AddField(
            model_name='teacher',
            name='teacher_rank',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='control_panel.TeacherRank', verbose_name='Звання'),
        ),
        migrations.AddField(
            model_name='department',
            name='department_head',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='control_panel.Teacher', verbose_name='Голова'),
        ),
        migrations.AddField(
            model_name='department',
            name='department_head_rank',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='control_panel.TeacherRank', verbose_name='Звання голови'),
        ),
    ]
